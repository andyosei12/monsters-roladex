{"version":3,"sources":["components/search-box/SearchBox.module.css","components/card/Card.js","components/card-list/CardList.js","components/search-box/SearchBox.js","App.js","reportWebVitals.js","index.js","components/card/Card.module.css","components/card-list/CardList.module.css"],"names":["module","exports","Card","monster","className","styles","src","id","alt","name","email","CardList","props","monsters","map","SearchBox","placeholder","handleChange","search","type","onChange","App","searchInputHandler","event","setState","searchInput","target","value","state","isLoading","a","this","fetch","res","json","users","filteredMonsters","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,OAAS,4B,iNCcZC,EAbF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,sBAAKC,UAAWC,IAAO,kBAAvB,UACE,qBACEC,IAAG,+BAA0BH,EAAQI,GAAlC,0BACHC,IAAK,YAEP,6BAAKL,EAAQM,OACb,mBAAGL,UAAWC,IAAM,eAApB,SAAyCF,EAAQO,Y,gBCGxCC,EAVE,SAACC,GAChB,OACE,qBAAKR,UAAWC,IAAO,aAAvB,SACGO,EAAMC,SAASC,KAAI,SAACX,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,U,iBCMZQ,EAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBACEb,UAAWC,IAAOa,OAClBC,KAAK,SACLH,YAAaA,EACbI,SAAUH,KCoDDI,E,kDAtDb,aAAe,IAAD,8BACZ,gBAyBFC,mBAAqB,SAACC,GACpB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAxB1C,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,GACbI,WAAW,GAND,E,4FAUd,8BAAAC,EAAA,6DACEC,KAAKP,SAAS,CAAEK,WAAW,IAD7B,SAEoBG,MAAM,8CAF1B,cAEQC,EAFR,gBAGsBA,EAAIC,OAH1B,OAGQC,EAHR,OAIEJ,KAAKP,SAAS,CACZX,SAAUsB,EACVN,WAAW,IANf,gD,0EAmBA,WAAU,IAAD,EAC2BE,KAAKH,MAA/Bf,EADD,EACCA,SAAUY,EADX,EACWA,YACZW,EAAmBvB,EAASwB,QAAO,SAAClC,GAAD,OACvCA,EAAQM,KAAK6B,cAAcC,SAASd,EAAYa,kBAGlD,OACE,sBAAKlC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEY,YAAY,kBACZC,aAAcc,KAAKT,sBAEnBS,KAAKH,MAAMC,WAAyC,IAA5BO,EAAiBI,QACzC,cAAC,EAAD,CAAU3B,SAAUuB,IAEO,IAA5BA,EAAiBI,SAAiBT,KAAKH,MAAMC,WAC5C,iDAEDE,KAAKH,MAAMC,WAAa,2D,GAjDfY,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfA1C,EAAOC,QAAU,CAAC,iBAAiB,6BAA6B,eAAiB,+B,kBCAjFD,EAAOC,QAAU,CAAC,YAAY,+B","file":"static/js/main.a44a16cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchBox_search__2QknL\"};","import styles from \"./Card.module.css\";\r\n\r\nconst Card = ({ monster }) => {\r\n  return (\r\n    <div className={styles[\"card-container\"]}>\r\n      <img\r\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\r\n        alt={\"monster\"}\r\n      />\r\n      <h2>{monster.name}</h2>\r\n      <p className={styles[\"monster__email\"]}>{monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"../card/Card\";\r\nimport styles from \"./CardList.module.css\";\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className={styles[\"card-list\"]}>\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import styles from \"./SearchBox.module.css\";\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className={styles.search}\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/CardList\";\nimport SearchBox from \"./components/search-box/SearchBox\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchInput: \"\",\n      isLoading: false,\n    };\n  }\n  // info: using async await\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const users = await res.json();\n    this.setState({\n      monsters: users,\n      isLoading: false,\n    });\n  }\n  // info using promises\n  // componentDidMount() {\n  //   fetch(\"https://jsonplaceholder.typicode.com/users\")\n  //     .then((res) => res.json())\n  //     .then((users) => this.setState({ monsters: users }));\n  // }\n\n  searchInputHandler = (event) => {\n    this.setState({ searchInput: event.target.value });\n  };\n  render() {\n    const { monsters, searchInput } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchInput.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Roladex</h1>\n        <SearchBox\n          placeholder=\"Search monsters\"\n          handleChange={this.searchInputHandler}\n        />\n        {!this.state.isLoading && filteredMonsters.length !== 0 && (\n          <CardList monsters={filteredMonsters} />\n        )}\n        {filteredMonsters.length === 0 && !this.state.isLoading && (\n          <p>No monster found</p>\n        )}\n        {this.state.isLoading && <p>Loading monsters...</p>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-container\":\"Card_card-container__3xKge\",\"monster__email\":\"Card_monster__email__3n7dR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-list\":\"CardList_card-list__2kRVa\"};"],"sourceRoot":""}